{"version":3,"sources":["webpack:///path---notes-enzyme-window-events-ed4f84a1cb8c1c5bf653.js","webpack:///./.cache/json/notes-enzyme-window-events.json"],"names":["webpackJsonp","393","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","hide","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,iBAAAC,OAAA,mBAAoDC,gBAAmBC,GAAA,uHAAAC,KAAA,07FAAmiGC,aAAqJL,MAAA,iEAAAM,KAAA,iBAAAC,KAAA,QAA+GC,aAAgBC,KAAA,+BAAAC,UAAkDC,QAAUF,KAAA,gCAAsCJ,aAAgBL,MAAA,8CAAqDY,MAASD,QAAUF,KAAA,YAAkBJ,aAAgBL,MAAA","file":"path---notes-enzyme-window-events-ed4f84a1cb8c1c5bf653.js","sourcesContent":["webpackJsonp([35974683655460],{\n\n/***/ 393:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Nathan Birrell\",\"author\":\"Nathan Birrell\"}},\"markdownRemark\":{\"id\":\"/Users/nathan/dev/nathanbirrell.github.io/src/pages/notes/enzyme-window-events.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Enzyme is built for testing <em>React components</em>, it handles React’s synthetic event system quite well (things like <code class=\\\"language-text\\\">onClick</code> events, for example).</p>\\n<p>But what happens when you want to test event handlers that must be bound to the <code class=\\\"language-text\\\">window</code>? Interactive components often require these, for <code class=\\\"language-text\\\">keydown</code> events and so on.</p>\\n<p>A quick solution is to mock the <code class=\\\"language-text\\\">window.addEventListener</code> function implmentation and use it to assign each callback to an object that is easy to call in your tests, to simulate those events firing.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// Set-up event listener mock</span>\\n<span class=\\\"token keyword\\\">const</span> map <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nwindow<span class=\\\"token punctuation\\\">.</span>addEventListener <span class=\\\"token operator\\\">=</span> jest<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">genMockFn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mockImpl</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  map<span class=\\\"token punctuation\\\">[</span>event<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> callback<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Mount component that has set callback for keydown event</span>\\n<span class=\\\"token keyword\\\">const</span> component <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>SomeComponent <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Trigger keydown event</span>\\nmap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keydown</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Escape'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/airbnb/enzyme/issues/426#issuecomment-253515886\\\">Source</a></p>\",\"frontmatter\":{\"title\":\"Test window-bound events on React components using Enzyme/Jest\",\"date\":\"April 27, 2018\",\"hide\":null}}},\"pathContext\":{\"slug\":\"/notes/enzyme-window-events/\",\"previous\":{\"fields\":{\"slug\":\"/notes/typescript-key-types/\"},\"frontmatter\":{\"title\":\"Define key types in Typescript interfaces\"}},\"next\":{\"fields\":{\"slug\":\"/resume/\"},\"frontmatter\":{\"title\":\"Curriculum vitae\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---notes-enzyme-window-events-ed4f84a1cb8c1c5bf653.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Nathan Birrell\",\"author\":\"Nathan Birrell\"}},\"markdownRemark\":{\"id\":\"/Users/nathan/dev/nathanbirrell.github.io/src/pages/notes/enzyme-window-events.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Enzyme is built for testing <em>React components</em>, it handles React’s synthetic event system quite well (things like <code class=\\\"language-text\\\">onClick</code> events, for example).</p>\\n<p>But what happens when you want to test event handlers that must be bound to the <code class=\\\"language-text\\\">window</code>? Interactive components often require these, for <code class=\\\"language-text\\\">keydown</code> events and so on.</p>\\n<p>A quick solution is to mock the <code class=\\\"language-text\\\">window.addEventListener</code> function implmentation and use it to assign each callback to an object that is easy to call in your tests, to simulate those events firing.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// Set-up event listener mock</span>\\n<span class=\\\"token keyword\\\">const</span> map <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nwindow<span class=\\\"token punctuation\\\">.</span>addEventListener <span class=\\\"token operator\\\">=</span> jest<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">genMockFn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mockImpl</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  map<span class=\\\"token punctuation\\\">[</span>event<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> callback<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Mount component that has set callback for keydown event</span>\\n<span class=\\\"token keyword\\\">const</span> component <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>SomeComponent <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Trigger keydown event</span>\\nmap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keydown</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Escape'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p><a href=\\\"https://github.com/airbnb/enzyme/issues/426#issuecomment-253515886\\\">Source</a></p>\",\"frontmatter\":{\"title\":\"Test window-bound events on React components using Enzyme/Jest\",\"date\":\"April 27, 2018\",\"hide\":null}}},\"pathContext\":{\"slug\":\"/notes/enzyme-window-events/\",\"previous\":{\"fields\":{\"slug\":\"/notes/typescript-key-types/\"},\"frontmatter\":{\"title\":\"Define key types in Typescript interfaces\"}},\"next\":{\"fields\":{\"slug\":\"/resume/\"},\"frontmatter\":{\"title\":\"Curriculum vitae\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/notes-enzyme-window-events.json\n// module id = 393\n// module chunks = 35974683655460"],"sourceRoot":""}